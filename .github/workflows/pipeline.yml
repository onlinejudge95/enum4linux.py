name: pipeline

on: [pull_request]

jobs:
  lint:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --requirement requirements.txt
        pip install --requirement requirements-test.txt

    - name: Run black
      run: |
        black --config pyproject.toml .

    - name: Run flake8
      run: |
        flake8 --config setup.cfg .

    - name: Run isort
      run: |
        isort \
        --atomic \
        --case-sensitive \
        --force-alphabetical-sort-within-sections \
        --force-single-line-imports \
        --lines-after-imports 2 \
        --lines-between-types 1 \
        --line-width 79 \
        --skip-glob "build/*" \
        .

  build:
    runs-on: ubuntu-18.04

    needs: lint

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --requirement requirements.txt
  
  publish:
    runs-on: ubuntu-18.04

    needs: [lint, build]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --requirement requirements-test.txt

    - name: Build package
      run: |
        python setup.py sdist bdist_wheel

    - name: Check rendering compatibility with PYPI
      run: |
        twine check dist/*

    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
